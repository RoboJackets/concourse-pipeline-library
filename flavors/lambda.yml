---
artifact:
  prefix: (( param "What is the prefix for the artifact in S3?" ))

resources:

- name: build-check
  public: true
  type: github-check
  icon: check
  source:
    check_name: Build ZIP
    resource_name: build-check
  tags:
  - resources

- name: upload-check
  public: true
  type: github-check
  icon: check
  source:
    check_name: Upload to S3
    resource_name: upload-check
  tags:
  - resources

- name: version
  type: semver
  public: true
  icon: counter
  source:
    initial_version: 0.0.0
    driver: s3
    inject: (( inject s3.source ))
    key: (( concat artifact.prefix "version.txt" ))
  tags:
  - resources

- name: package
  type: s3
  public: true
  icon: folder-zip
  source:
    inject: (( inject s3.source ))
    skip_download: true
    regexp: (( concat artifact.prefix "package-v(?P<version>[0-9.]+)\\.zip" ))
  tags:
  - resources

tasks:

  put_build_check:
    put: build-check
    params:
      conclusion: success
      title: ZIP built successfully
      summary: The ZIP was successfully built.
    inputs:
    - build-check

  build_python_lambda_zip:

    task: build-lambda-zip
    config: (( load "tasks/python/build-lambda-zip.yml" ))
    input_mapping:
      source: (( grab repository.name))
    on_failure:
      put: build-check
      params:
        conclusion: failure
      inputs:
      - build-check
    on_abort:
      inject: (( inject tasks.build_python_lambda_zip.on_failure ))
      params:
        conclusion: cancelled
    on_error:
      inject: (( inject tasks.build_python_lambda_zip.on_failure ))
      params:
        conclusion: action_required

  rename_package:

    task: rename-package
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine
      inputs:
      - name: package
      - name: version
      outputs:
      - name: package
      run:
        path: sh
        args:
        - -e
        - -x
        - -c
        - mv package/package.zip package/package-v$(cat version/version).zip
