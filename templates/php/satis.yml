---
disable_forks: false

aws:
  credentials: (( param "What AWS credentials should be used to upload?" ))
  target: (( param "Where should the repository be uploaded?" ))

merge:
- flavors/php.yml

resources:

- name: satis-build-check
  public: true
  type: github-check
  icon: check
  source:
    check_name: Satis Build
    resource_name: satis-build-check

- name: s3-sync-check
  public: true
  type: github-check
  icon: check
  source:
    check_name: S3 Sync
    resource_name: s3-sync-check

tasks:

  run_script: (( load "tasks/php/run-script.yml" ))

jobs:

- name: (( concat "build-" repository.main_branch ))
  public: true
  plan:

  - in_parallel:

    - do:

      - get: (( grab repository.name ))
        trigger: true

      - (( grab tasks.get_commit_sha ))

      - (( grab tasks.load_var_from_git ))

  - put: composer-install-check
    inputs: []

  - (( grab tasks.composer_install_dev ))

  - in_parallel:

    - (( grab tasks.put_composer_install_check))

    - put: satis-build-check
      inputs: []

  - task: update-satis-dist
    config:
      inject: (( defer inject tasks.run_script ))
      run:
        args:
        - -f
        - update-satis-dist.php
    input_mapping:
      source: (( grab repository.name ))
    output_mapping:
      source: (( grab repository.name ))

  - task: satis-build
    config: (( load "tasks/php/satis-build.yml" ))
    input_mapping:
      source: (( grab repository.name ))
    on_failure:
      put: satis-build-check
      params:
        conclusion: failure
        title: Failed to build repository
        summary: Review the output within Concourse.
      inputs:
      - satis-build-check
    on_abort:
      put: satis-build-check
      params:
        conclusion: cancelled
      inputs:
      - satis-build-check
    on_error:
      put: satis-build-check
      params:
        conclusion: action_required
      inputs:
      - satis-build-check

  - in_parallel:
    - put: satis-build-check
      params:
        conclusion: success
        title: Repository built
        summary: Satis successfully built the repository.
      inputs:
      - satis-build-check
    - put: s3-sync-check
      inputs: []

  - task: s3-sync
    config: (( load "tasks/aws/s3-sync.yml" ))
    input_mapping:
      source: build
    on_success:
      put: s3-sync-check
      params:
        conclusion: success
        title: Repository uploaded
        summary: Repository was successfully uploaded to AWS.
      inputs:
      - s3-sync-check
    on_failure:
      put: s3-sync-check
      params:
        conclusion: failure
        title: Failed to upload repository
        summary: Review the output within Concourse.
      inputs:
      - s3-sync-check
    on_abort:
      put: s3-sync-check
      params:
        conclusion: cancelled
      inputs:
      - s3-sync-check
    on_error:
      put: s3-sync-check
      params:
        conclusion: action_required
      inputs:
      - s3-sync-check

- name: build-pull-request
  public: true
  plan:

  - in_parallel:

    - do:

      - get: pull-request
        trigger: true

      - (( grab tasks.load_var_from_pull_request ))

      - (( grab tasks.load_pull_request_url ))

  - (( concat "(( grab jobs.build-" repository.main_branch ".plan.1 ))" ))

  - (( concat "(( grab jobs.build-" repository.main_branch ".plan.2 ))" ))

  - (( concat "(( grab jobs.build-" repository.main_branch ".plan.3 ))" ))

  - (( concat "(( grab jobs.build-" repository.main_branch ".plan.4 ))" ))

  - (( concat "(( grab jobs.build-" repository.main_branch ".plan.5 ))" ))

  - (( concat "(( grab jobs.build-" repository.main_branch ".plan.6.in_parallel.0 ))" ))
