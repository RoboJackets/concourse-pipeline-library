---
disable_forks: false

merge:
- flavors/python.yml
- flavors/lambda.yml

jobs:

- name: (( concat "build-" repository.main_branch ))
  public: true
  plan:

  - get: (( grab repository.name ))
    trigger: true

  - (( grab tasks.get_commit_sha ))

  - (( grab tasks.load_var_from_git ))

  - in_parallel:

    - do:

      - put: build-check
        inputs: []

      - (( grab tasks.build_python_lambda_zip ))

      - (( grab tasks.put_build_check ))

    - do:

      - put: poetry-install-check
        inputs: []

      - (( grab tasks.poetry_install_dev ))

      - in_parallel:

        - (( grab tasks.put_poetry_install_check ))

        - (( grab tasks.flake8 ))

        - (( grab tasks.pylint ))

        - (( grab tasks.mypy ))

  - put: upload-check
    inputs: []

  - do:

    - get: version
      params:
        bump: major

    - (( grab tasks.rename_package ))

    - put: package
      params:
        file: package/*.zip
        content_type: application/zip
      inputs:
      - package

    - put: version
      params:
        file: version/version
      inputs:
      - version

    on_failure:
      put: upload-check
      inputs:
      - upload-check
      params:
        conclusion: failure
    on_abort:
      put: upload-check
      inputs:
      - upload-check
      params:
        conclusion: cancelled
    on_error:
      put: upload-check
      inputs:
      - upload-check
      params:
        conclusion: action_required

  - put: upload-check
    inputs:
    - upload-check
    params:
      conclusion: success

- name: build-pull-request
  public: true
  plan:

  - get: pull-request
    trigger: true

  - (( grab tasks.load_var_from_pull_request ))

  - in_parallel:

    - do:

      - put: build-check
        inputs: []

      - inject: (( inject tasks.build_python_lambda_zip ))
        input_mapping:
          source: pull-request

      - (( grab tasks.put_build_check ))

    - do:

      - put: poetry-install-check
        inputs: []

      - inject: (( inject tasks.poetry_install_dev ))
        input_mapping:
          source: pull-request

      - in_parallel:

        - inject: (( inject tasks.put_poetry_install_check ))

        - inject: (( inject tasks.flake8 ))
          do:
          - (( defer inline ))
          - {}
          - input_mapping:
              source: pull-request

        - inject: (( inject tasks.pylint ))
          do:
          - (( defer inline ))
          - {}
          - input_mapping:
              source: pull-request

        - inject: (( inject tasks.mypy ))
          do:
          - (( defer inline ))
          - {}
          - input_mapping:
              source: pull-request
