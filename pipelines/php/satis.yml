---
resource_types:

- name: github-check
  type: registry-image
  source:
    repository: docker.robojackets.org/robojackets/concourse-github-check-resource
    username: ((docker-robojackets-org.username))
    password: ((docker-robojackets-org.password))
  defaults:
    repository: ((source-repository))
    pull_request: pull-request
    token: ((((github-host-dashes))/token.token))

- name: github-webhook
  type: registry-image
  source:
    repository: docker.robojackets.org/robojackets/concourse-github-webhook-resource
    username: ((docker-robojackets-org.username))
    password: ((docker-robojackets-org.password))

- name: pull-request
  type: registry-image
  source:
    repository: teliaoss/github-pr-resource

- name: slack
  type: registry-image
  source:
    repository: mockersf/concourse-slack-notifier

resources:

- name: concourse-pipeline-library
  public: true
  type: git
  icon: github
  source:
    uri: https://github.com/RoboJackets/concourse-pipeline-library
    branch: main
    username: x-access-token
    password: ((github-com/token.token))

- name: ((source-repository))
  type: git
  public: true
  icon: github
  source:
    uri: https://((github-host))/RoboJackets/((source-repository))
    branch: ((base-branch))
    username: x-access-token
    password: ((((github-host-dashes))/token.token))
  webhook_token: ((webhook-token))

- name: pull-request
  public: true
  type: pull-request
  icon: source-pull
  webhook_token: ((webhook-token))
  source:
    repository: RoboJackets/((source-repository))
    access_token: ((((github-host-dashes))/token.token))
    v3_endpoint: ((github-rest-api-endpoint))
    v4_endpoint: ((github-graphql-api-endpoint))
    base_branch: ((base-branch))
    disable_forks: true

- name: composer-install-check
  public: true
  type: github-check
  icon: check-bold
  source:
    check_name: Composer Install
    resource_name: composer-install-check

- name: satis-build-check
  public: true
  type: github-check
  icon: check-bold
  source:
    check_name: Satis Build
    resource_name: satis-build-check

- name: s3-sync-check
  public: true
  type: github-check
  icon: check-bold
  source:
    check_name: S3 Sync
    resource_name: s3-sync-check

- name: webhooks
  public: true
  type: github-webhook
  icon: webhook
  source:
    github_token: ((((github-host-dashes))/token.token))
    webhook_token: ((webhook-token))
    resources:
      ((source-repository)):
        github_uri: https://((github-host))/RoboJackets/((source-repository))
        events:
        - push
      pull-request:
        github_uri: https://((github-host))/RoboJackets/((source-repository))
        events:
        - push
        - pull_request
      apiary-user:
        github_uri: https://((github-host))/RoboJackets/apiary-user
        events:
        - release
      error-pages:
        github_uri: https://((github-host))/RoboJackets/error-pages
        events:
        - release
      network-check:
        github_uri: https://((github-host))/RoboJackets/network-check
        events:
        - release
      static-analysis:
        github_uri: https://((github-host))/RoboJackets/static-analysis
        events:
        - release
      auth-stickler:
        github_uri: https://((github-host))/RoboJackets/auth-stickler
        events:
        - release
      gatech-mediawiki-auth:
        github_uri: https://((github-host))/RoboJackets/gatech-mediawiki-auth
        events:
        - release

- name: slack
  public: true
  type: slack
  icon: slack
  source:
    url: ((slack-webhook))

- name: apiary-user
  public: true
  type: github-release
  icon: github
  webhook_token: ((webhook-token))
  source:
    owner: RoboJackets
    repository: apiary-user
    access_token: ((((github-host-dashes))/token.token))
    github_api_url: ((github-rest-api-endpoint))
    github_v4_api_url: ((github-graphql-api-endpoint))
    release: true
    pre_release: true

- name: error-pages
  public: true
  type: github-release
  icon: github
  webhook_token: ((webhook-token))
  source:
    owner: RoboJackets
    repository: error-pages
    access_token: ((((github-host-dashes))/token.token))
    github_api_url: ((github-rest-api-endpoint))
    github_v4_api_url: ((github-graphql-api-endpoint))
    release: true
    pre_release: true

- name: network-check
  public: true
  type: github-release
  icon: github
  webhook_token: ((webhook-token))
  source:
    owner: RoboJackets
    repository: network-check
    access_token: ((((github-host-dashes))/token.token))
    github_api_url: ((github-rest-api-endpoint))
    github_v4_api_url: ((github-graphql-api-endpoint))
    release: true
    pre_release: true

- name: static-analysis
  public: true
  type: github-release
  icon: github
  webhook_token: ((webhook-token))
  source:
    owner: RoboJackets
    repository: static-analysis
    access_token: ((((github-host-dashes))/token.token))
    github_api_url: ((github-rest-api-endpoint))
    github_v4_api_url: ((github-graphql-api-endpoint))
    release: true
    pre_release: true

- name: buzzapiclient
  public: true
  type: github-release
  icon: github
  webhook_token: ((webhook-token))
  source:
    owner: OIT-NetworkServices
    repository: BuzzAPIClient
    access_token: ((((github-host-dashes))/token.token))
    github_api_url: ((github-rest-api-endpoint))
    github_v4_api_url: ((github-graphql-api-endpoint))
    release: true
    pre_release: true

- name: auth-stickler
  public: true
  type: github-release
  icon: github
  webhook_token: ((webhook-token))
  source:
    owner: RoboJackets
    repository: auth-stickler
    access_token: ((((github-host-dashes))/token.token))
    github_api_url: ((github-rest-api-endpoint))
    github_v4_api_url: ((github-graphql-api-endpoint))
    release: true
    pre_release: true

- name: gatech-mediawiki-auth
  public: true
  type: github-release
  icon: github
  webhook_token: ((webhook-token))
  source:
    owner: RoboJackets
    repository: gatech-mediawiki-auth
    access_token: ((((github-host-dashes))/token.token))
    github_api_url: ((github-rest-api-endpoint))
    github_v4_api_url: ((github-graphql-api-endpoint))
    release: true
    pre_release: true

jobs:

- name: build-((base-branch))
  public: true
  plan:

  - in_parallel:

    - get: concourse-pipeline-library

    - get: ((source-repository))
      trigger: true

    - get: apiary-user
      trigger: true

    - get: error-pages
      trigger: true

    - get: network-check
      trigger: true

    - get: static-analysis
      trigger: true

    - get: buzzapiclient
      trigger: true

    - get: auth-stickler
      trigger: true

    - get: gatech-mediawiki-auth
      trigger: true

  - put: composer-install-check
    inputs:
    - ((source-repository))

  - task: composer-install-dev
    file: concourse-pipeline-library/tasks/php/composer-install-dev.yml
    input_mapping:
      source: ((source-repository))
    on_failure:
      put: composer-install-check
      params:
        conclusion: failure
        title: Failed to install dependencies
        summary: Review the output within Concourse.
      inputs:
      - composer-install-check
      - ((source-repository))
    on_abort:
      put: composer-install-check
      params:
        conclusion: cancelled
      inputs:
      - composer-install-check
      - ((source-repository))
    on_error:
      put: composer-install-check
      params:
        conclusion: action_required
      inputs:
      - composer-install-check
      - ((source-repository))

  - in_parallel:
    - put: composer-install-check
      params:
        conclusion: success
        title: Dependencies installed
        summary: Composer successfully installed development dependencies.
      inputs:
      - composer-install-check
      - ((source-repository))
    - put: satis-build-check
      inputs:
      - ((source-repository))

  - task: update-satis-dist
    file: concourse-pipeline-library/tasks/php/run-script.yml
    input_mapping:
      source: ((source-repository))
    output_mapping:
      source: ((source-repository))
    vars:
      filename: update-satis-dist.php

  - task: satis-build
    file: concourse-pipeline-library/tasks/php/satis-build.yml
    input_mapping:
      source: ((source-repository))
    vars:
      github-host: ((github-host))
      github-host-dashes: ((github-host-dashes))
    on_failure:
      put: satis-build-check
      params:
        conclusion: failure
        title: Failed to build repository
        summary: Review the output within Concourse.
      inputs:
      - satis-build-check
      - ((source-repository))
    on_abort:
      put: satis-build-check
      params:
        conclusion: cancelled
      inputs:
      - satis-build-check
      - ((source-repository))
    on_error:
      put: satis-build-check
      params:
        conclusion: action_required
      inputs:
      - satis-build-check
      - ((source-repository))

  - in_parallel:
    - put: satis-build-check
      params:
        conclusion: success
        title: Repository built
        summary: Satis successfully built the repository.
      inputs:
      - satis-build-check
      - ((source-repository))
    - put: s3-sync-check
      inputs:
      - ((source-repository))

  - task: s3-sync
    file: concourse-pipeline-library/tasks/aws/s3-sync.yml
    input_mapping:
      source: build
    vars:
      target: ((target))
      aws-credentials: ((aws-credentials))
    on_success:
      put: s3-sync-check
      params:
        conclusion: success
        title: Repository uploaded
        summary: Repository was successfully synced to AWS.
      inputs:
      - s3-sync-check
      - ((source-repository))
    on_failure:
      put: s3-sync-check
      params:
        conclusion: failure
        title: Failed to upload repository
        summary: Review the output within Concourse.
      inputs:
      - s3-sync-check
      - ((source-repository))
    on_abort:
      put: s3-sync-check
      params:
        conclusion: cancelled
      inputs:
      - s3-sync-check
      - ((source-repository))
    on_error:
      put: s3-sync-check
      params:
        conclusion: action_required
      inputs:
      - s3-sync-check
      - ((source-repository))

  - put: webhooks
    inputs: []

  on_success:
    put: slack
    params:
      alert_type: success
      mode: normal
    inputs: []
  on_failure:
    put: slack
    params:
      alert_type: failed
      mode: normal
    inputs: []
  on_abort:
    put: slack
    params:
      alert_type: aborted
      mode: normal
    inputs: []
  on_error:
    put: slack
    params:
      alert_type: failed
      mode: normal
      message: Task error, review logs
    inputs: []

- name: build-pull-request
  public: true
  plan:

  - in_parallel:

    - get: concourse-pipeline-library

    - get: pull-request
      trigger: true
      version: every
      params:
        integration_tool: checkout

  - put: composer-install-check
    inputs:
    - pull-request

  - task: composer-install-dev
    file: concourse-pipeline-library/tasks/php/composer-install-dev.yml
    input_mapping:
      source: pull-request
    on_failure:
      put: composer-install-check
      params:
        conclusion: failure
        title: Failed to install dependencies
        summary: Review the output within Concourse.
      inputs:
      - composer-install-check
      - pull-request
    on_abort:
      put: composer-install-check
      params:
        conclusion: cancelled
      inputs:
      - composer-install-check
      - pull-request
    on_error:
      put: composer-install-check
      params:
        conclusion: action_required
      inputs:
      - composer-install-check
      - pull-request

  - in_parallel:
    - put: composer-install-check
      params:
        conclusion: success
        title: Dependencies installed
        summary: Composer successfully installed development dependencies.
      inputs:
      - composer-install-check
      - pull-request
    - put: satis-build-check
      inputs:
      - pull-request

  - task: satis-build
    file: concourse-pipeline-library/tasks/php/satis-build.yml
    input_mapping:
      source: pull-request
    vars:
      github-host: ((github-host))
      github-host-dashes: ((github-host-dashes))
    on_success:
      put: satis-build-check
      params:
        conclusion: success
        title: Repository built
        summary: Satis successfully built the distribution.
      inputs:
      - satis-build-check
      - pull-request
    on_failure:
      put: satis-build-check
      params:
        conclusion: failure
        title: Failed to build repository
        summary: Review the output within Concourse.
      inputs:
      - satis-build-check
      - pull-request
    on_abort:
      put: satis-build-check
      params:
        conclusion: cancelled
      inputs:
      - satis-build-check
      - pull-request
    on_error:
      put: satis-build-check
      params:
        conclusion: action_required
      inputs:
      - satis-build-check
      - pull-request
