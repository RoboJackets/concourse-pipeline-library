---
resource_types:

- name: github-check
  type: registry-image
  source:
    repository: docker.robojackets.org/robojackets/concourse-github-check-resource
    username: ((docker-robojackets-org.username))
    password: ((docker-robojackets-org.password))
  defaults:
    repository: ((source-repository))
    pull_request: pull-request
    token: ((((github-host-dashes))/token.token))

- name: github-webhook
  type: registry-image
  source:
    repository: docker.robojackets.org/robojackets/concourse-github-webhook-resource
    username: ((docker-robojackets-org.username))
    password: ((docker-robojackets-org.password))

- name: pull-request
  type: registry-image
  source:
    repository: teliaoss/github-pr-resource

- name: slack
  type: registry-image
  source:
    repository: mockersf/concourse-slack-notifier

resources:

- name: concourse-pipeline-library
  public: true
  type: git
  icon: github
  source:
    uri: https://github.com/RoboJackets/concourse-pipeline-library
    branch: main
    username: x-access-token
    password: ((github-com/token.token))

- name: ((source-repository))
  type: git
  public: true
  icon: github
  source:
    uri: https://((github-host))/RoboJackets/((source-repository))
    branch: ((base-branch))
    username: x-access-token
    password: ((((github-host-dashes))/token.token))
  webhook_token: ((webhook-token))

- name: pull-request
  public: true
  type: pull-request
  icon: source-pull
  webhook_token: ((webhook-token))
  source:
    repository: RoboJackets/((source-repository))
    access_token: ((((github-host-dashes))/token.token))
    v3_endpoint: ((github-rest-api-endpoint))
    v4_endpoint: ((github-graphql-api-endpoint))
    base_branch: ((base-branch))
    disable_forks: ((disable-forks))

- name: yamllint-check
  public: true
  type: github-check
  icon: check-bold
  source:
    check_name: YAML Lint
    resource_name: yamllint-check
    annotations_format: yamllint

- name: markdownlint-check
  public: true
  type: github-check
  icon: check-bold
  source:
    check_name: Markdown Lint
    resource_name: markdownlint-check
    annotations_format: yamllint

- name: webhooks
  public: true
  type: github-webhook
  icon: webhook
  source:
    github_token: ((((github-host-dashes))/token.token))
    webhook_token: ((webhook-token))
    resources:
      ((source-repository)):
        github_uri: https://((github-host))/RoboJackets/((source-repository))
        events:
        - push
      pull-request:
        github_uri: https://((github-host))/RoboJackets/((source-repository))
        events:
        - push
        - pull_request

- name: slack
  public: true
  type: slack
  icon: slack
  source:
    url: ((slack-webhook))

jobs:

- name: build-((base-branch))
  public: true
  plan:

  - in_parallel:

    - get: concourse-pipeline-library

    - get: ((source-repository))
      trigger: true

  - in_parallel:

    - do:

      - put: yamllint-check
        inputs:
        - ((source-repository))

      - task: yamllint
        file: concourse-pipeline-library/tasks/python/yamllint.yml
        input_mapping:
          source: ((source-repository))
        on_success:
          put: yamllint-check
          params:
            conclusion: success
        on_failure:
          put: yamllint-check
          params:
            conclusion: failure
        on_abort:
          put: yamllint-check
          params:
            conclusion: cancelled
        on_error:
          put: yamllint-check
          params:
            conclusion: action_required

    - do:

      - put: markdownlint-check
        inputs:
        - ((source-repository))

      - task: markdownlint
        file: concourse-pipeline-library/tasks/javascript/markdownlint.yml
        input_mapping:
          source: ((source-repository))
        on_success:
          put: markdownlint-check
          params:
            conclusion: success
        on_failure:
          put: markdownlint-check
          params:
            conclusion: failure
        on_abort:
          put: markdownlint-check
          params:
            conclusion: cancelled
        on_error:
          put: markdownlint-check
          params:
            conclusion: action_required

  - put: webhooks
    inputs: []

  on_success:
    put: slack
    params:
      alert_type: success
      mode: normal
    inputs: []
  on_failure:
    put: slack
    params:
      alert_type: failed
      mode: normal
    inputs: []
  on_abort:
    put: slack
    params:
      alert_type: aborted
      mode: normal
    inputs: []
  on_error:
    put: slack
    params:
      alert_type: failed
      mode: normal
      message: Task error, review logs
    inputs: []

- name: build-pull-request
  public: true
  plan:

  - in_parallel:

    - get: concourse-pipeline-library

    - get: pull-request
      trigger: true
      version: every
      params:
        integration_tool: checkout

  - in_parallel:

    - do:

      - put: yamllint-check
        inputs:
        - pull-request

      - task: yamllint
        file: concourse-pipeline-library/tasks/python/yamllint.yml
        input_mapping:
          source: pull-request
        on_success:
          put: yamllint-check
          params:
            conclusion: success
        on_failure:
          put: yamllint-check
          params:
            conclusion: failure
        on_abort:
          put: yamllint-check
          params:
            conclusion: cancelled
        on_error:
          put: yamllint-check
          params:
            conclusion: action_required

    - do:

      - put: markdownlint-check
        inputs:
        - pull-request

      - task: markdownlint
        file: concourse-pipeline-library/tasks/javascript/markdownlint.yml
        input_mapping:
          source: pull-request
        on_success:
          put: markdownlint-check
          params:
            conclusion: success
        on_failure:
          put: markdownlint-check
          params:
            conclusion: failure
        on_abort:
          put: markdownlint-check
          params:
            conclusion: cancelled
        on_error:
          put: markdownlint-check
          params:
            conclusion: action_required
